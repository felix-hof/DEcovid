% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_time_period.R
\name{get_time_period}
\alias{get_time_period}
\title{Get the available time period for fitting of Endemic-Epidemic (EE) models}
\usage{
get_time_period(data_list, time_res)
}
\arguments{
\item{data_list}{A \code{list} containing possible covariate \code{data.frame}s.
These \code{data.frame}s must have a column named \code{date} which contains objects of class \code{Date} and a column named \code{value} which can contain any type of
data. This is usually the output of the function \code{\link[DEcovid]{get_data}}.}

\item{time_res}{The temporal resolution that the data frames have. Must be either \code{"daily"} or \code{"weekly"}.}
}
\value{
The function returns a vector of length 2 containing the start and end date of the the longest run where all data
values in the data frames within \code{data_list} are not \code{NA}.
}
\description{
This function returns the start and the end date between which there is data available for all data sets within a list. This helps to truncate time
the data sets that can be accessed via the package \code{DEcovid} but also for other applications. The idea is that for model fitting, \code{NA} values are usually
not desired in such time series. Therefore, the time series must usually be truncated to a period where there is non-missing data available for all predictor variables
as well as the response variable. This function thus returns the longest period without missing values in any of the data sets within the list passed in the first
argument.
}
\examples{
\dontrun{
spat_res <- 0
time_res <- "weekly"
age_res <- "no_age"

data <- get_data(age_res = age_res, spat_res = spat_res, time_res = time_res,
                 complete = "region", enforce_cache = FALSE)
dates <- get_time_period(data_list = data, time_res = time_res)
}

}
